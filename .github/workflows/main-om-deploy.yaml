name: 'deploy-to-aws-ecs'
on:
   push:
    branches:
     - main
env:
  AWS_ACCESS_KEY: ${{secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_KEY: ${{secrets.AWS_SECRET_KEY_ID}}
  GITHUB_TOKEN: ${{secrets.MY_GITHUB_TOKEN1}}
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  MYAWS_REGION: "us-east-1"

jobs:

######################### new tag docker image #########################
  #  docker-push-to-aws-ecr:  
  #         name: change-tag-docker-image
  #         runs-on: ubuntu-latest
  #         steps: 
  #           - uses: shrink/actions-docker-registry-tag@v2
  #             with:
  #               token: ${{secrets.MY_GITHUB_TOKEN1}}
  #               registry: ghcr.io
  #               repository: '${{ github.repository }}'
  #               target: pr-8
  #               tags: develop
######################### new tag docker image #########################

######################### push docker image to AWS ECR ###################################
    push-dockerimage-ecr:
        if: startsWith(github.event.head_commit.message, 'Merge pull request')
        runs-on: ubuntu-latest

        steps:
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ env.AWS_ACCESS_KEY }}
            aws-secret-access-key: ${{ env.AWS_SECRET_KEY }}
            aws-region: ${{ env.MYAWS_REGION }}
        
        - name: install-aws-cli
          uses: unfor19/install-aws-cli-action@v1.0.3
          with:
            version: 2     # default
            verbose: false # default
            arch: amd64    # allowed values: amd64, arm64
            rootdir: ""    # defaults to "PWD"
            workdir: ""    # defaults to "PWD/unfor19-awscli"
        
        - name: Pull Docker image
          run: docker pull ghcr.io/serwol2/openmeetings-dp:develop

        - name: Name Docker image
          run: docker images  

        - name: push-image
          run: |
              aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/b0e2l4e5
              docker tag ghcr.io/serwol2/openmeetings-dp:develop public.ecr.aws/b0e2l4e5/openmeetings-dp:${{ github.sha }}
              docker push public.ecr.aws/b0e2l4e5/openmeetings-dp:${{ github.sha }}
        
        - name: update-cluster
          run: aws ecs update-service --service web-service --cluster om-cluster --force-new-deployment

 ########################## push docker image to AWS ECR ###################################
