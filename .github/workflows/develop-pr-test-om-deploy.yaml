name: 'plan docker build '
on:
   push:          
    branches:
     - develop                       
env:
  AWS_ACCESS_KEY: ${{secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_KEY: ${{secrets.AWS_SECRET_KEY_ID}}
  GITHUB_TOKEN: ${{secrets.MY_GITHUB_TOKEN1}}
  MYAWS_REGION: "us-east-1"
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
    
######################### Create docker image ########## V1 ##########################
  # build-and-push-image:
  #       # if: startsWith(github.event.head_commit.message, 'Merge pull request') # (!!!)
  #       runs-on: ubuntu-latest
  #       permissions:
  #         contents: read
  #         packages: write

  #       steps:
  #         - name: Checkout repository
  #           uses: actions/checkout@v3

  #         - name: Log in to the Container registry
  #           uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
  #           with:
  #             registry: ${{ env.REGISTRY }}
  #             username: ${{ github.actor }}
  #             password: ${{ secrets.GITHUB_TOKEN }}

  #         - name: Extract metadata (tags, labels) for Docker
  #           id: meta
  #           uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
  #           with:
  #              images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

  #         - name: Build and push Docker image
  #           uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
  #           with:
  #             context: .
  #             push: true
  #             build-args: "BUILD_TYPE=full"
  #             tags: "develop"  #${{ steps.meta.outputs.tags }}  test it!!
  #             labels: ${{ steps.meta.outputs.labels }}

######################### Create docker image ########## V1 #########################

######################### Create docker image ############ V2 ######################
  build-and-push-image:
      if: startsWith(github.event.head_commit.message, 'Merge pull request') 
      name: build-docker-image
      runs-on: ubuntu-latest  
      steps:      
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.MY_GITHUB_TOKEN1 }}
      
      # - name: Build & Push to GitHub Package 
      #   uses: opspresso/action-docker@master  
      #   with:
      #     args: --docker
      #   env:
      #     PASSWORD: ${{ secrets.MY_GITHUB_TOKEN1 }}
      #     REGISTRY: "docker.pkg.github.com"
      #     TAG_NAME: "develop"
      #     #DOCKERFILE: ./Dockerfile
      #     DOCKER_BUILD_ARGS: --build-arg BUILD_TYPE=full   #min
      #     #IMAGE_NAME: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
    ######################### Create docker image ############ V2 #######################




  make_test_instance:
      name: running-terraform-for-deploy
      needs: 
         - build-and-push-image
      runs-on: ubuntu-latest
      env:
        WORKING_DIRECTORY: terraform

      steps:
      - name: 'Checkout'
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1 
        with:
          aws-access-key-id: ${{env.AWS_ACCESS_KEY}}
          aws-secret-access-key: ${{env.AWS_SECRET_KEY}}
          aws-region: ${{env.MYAWS_REGION}}

      - name: 'Use terraform 1.1.7'
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7

      - name: 'Terraform init'
        id: init
        run: terraform init 
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Terraform apply
        uses: dflook/terraform-apply@v1
        with:
          path: ${{ env.WORKING_DIRECTORY }}
          auto_approve: true

######################### Create pull request ###################################
  create-pull-request:
      runs-on: ubuntu-latest
      name: create-pull-request
      needs: 
        #- build-and-push-image
        - make_test_instance

      steps:
        - name: Check out repository code
          uses: actions/checkout@v2
          # with:
          #   fetch-depth: 0
          #   ref: feature

        - name: install github cli
          run: |
            sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
            sudo apt-add-repository https://cli.github.com/packages
            sudo apt update
            sudo apt install gh  

      
        - name: Create Pull Request CLI
          run: gh pr create --title "New docker image ready to be deployed" --body "test and merge to main pls" --base main --head develop
          env: 
            GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN1  }}

######################### Create pull request ###################################
